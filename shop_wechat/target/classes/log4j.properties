# 配置根Logger
log4j.rootLogger=DEBUG,CONSOLE,SHOPLOG,MAIL

# Log4j配置文件实现了输出到控制台、文件、回滚文件、发送日志邮件、输出到数据库日志表、自定义标签等全套功能

#它是 子Logger 是否继承 父Logger 的 输出源（appender）的标志位。具体说，默认情况下子Logger会继承父Logger的appender，也就是说子Logger会在父Logger的appender里输出。若是additivity设为false，则子Logger只会在自己的appender里输出，而不会在父Logger的appender里输出。
log4j.additivity.org.apache=true

log4j.logger.com.shop=debug
log4j.logger.com.zaxxer.hikari.pool.HikariPool=info
log4j.logger.org.mybatis=INFO
log4j.logger.org.jboss=INFO
log4j.logger.org.apache=INFO
log4j.logger.com.alibaba=ERROR
log4j.logger.com.netflix=INFO
log4j.logger.httpclient=INFO
log4j.logger.org.apache.zookeeper=ERROR
log4j.logger.redis.clients=DEBUG
log4j.logger.net.sf.ezmorph.bean.BeanMorpher=ERROR
log4j.logger.org.springframework=INFO
log4j.logger.org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping=ERROR
log4j.logger.org.springframework.beans.factory.support.DefaultListableBeanFactory=ERROR

#\u8f93\u51faMyBatis SQL\u8bed\u53e5
log4j.logger.com.ibatis=ERROR
log4j.logger.com.ibatis.common.jdbc.SimpleDataSource=DEBUG
log4j.logger.com.ibatis.common.jdbc.ScriptRunner=DEBUG
log4j.logger.com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate=DEBUG
log4j.logger.java.sql.Connection=DEBUG
log4j.logger.java.sql.Statement=DEBUG
log4j.logger.java.sql.PreparedStatement=DEBUG



#--------------------------------------------------------------------------------
# 日志输出到控制台
log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
# 指定日志信息的最低输出级别，默认为DEBUG
log4j.appender.CONSOLE.Threshold=DEBUG
# 表示所有消息都会被立即输出，设为false则不输出，默认值是true
log4j.appender.CONSOLE.ImmediateFlush=true
# 默认值是System.out
log4j.appender.console.Target=System.err
log4j.appender.CONSOLE.Encoding=UTF-8
# # 可以灵活地指定布局模式
log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
# 设定以怎样的格式显示消息
log4j.appender.CONSOLE.layout.ConversionPattern=[shop-wechat] %d %-5p %c(%L) %x - %m%n
#--------------------------------------------------------------------------------





#--------------------------------------------------------------------------------
# 日志单独输出到文件
# 每天产生一个日志文件
log4j.appender.SHOPLOG=org.apache.log4j.DailyRollingFileAppender  
# 指定当前消息输出到/logs/shop_wechat/shop_wechat.log文件中
log4j.appender.SHOPLOG.File=/logs/shop_wechat/shop_wechat.log
# true表示消息增加到指定文件中，false则将消息覆盖指定的文件内容，默认值是true
log4j.appender.SHOPLOG.Append=true
# 指定日志信息的最低输出级别，默认为DEBUG
log4j.appender.SHOPLOG.Threshold=INFO
log4j.appender.SHOPLOG.Encoding=UTF-8
# 每月滚动一次日志文件，即每月产生一个新的日志文件。当前月的日志文件名为logging.log4j，
# 前一个月的日志文件名为logging.log4j.yyyy-MM-dd
log4j.appender.SHOPLOG.DatePattern='.'yy-MM-dd
# 可以灵活地指定布局模式
log4j.appender.SHOPLOG.layout=org.apache.log4j.PatternLayout
# 设定以怎样的格式显示消息
log4j.appender.SHOPLOG.layout.ConversionPattern=[shop-wechat] %d %-5p %c(%L) %x - %m%n
#--------------------------------------------------------------------------------







#--------------------------------------------------------------------------------------
## 发送日志到指定邮件
#log4j.appender.MAIL=org.apache.log4j.net.SMTPAppender
##log4j.appender.MAIL=com.shop.api.base.log.DefineSMTPAppender
#log4j.appender.MAIL.mail.smtp.starttls.enable=true
##是否打印调试信息，如果选true，则会输出和SMTP之间的握手等详细信息
#log4j.appender.MAIL.SMTPDebug=true
##生产上只有error级别才发送邮件,测试时可以调低级别
#log4j.appender.MAIL.Threshold=ERROR
##log4j.appender.MAIL.Threshold=DEBUG
##缓存文件大小，日志达到1时发送Email
#log4j.appender.MAIL.BufferSize=4
##发送邮件的服务器
#log4j.appender.MAIL.SMTPHost=smtp.sina.cn
##设置端口-->使得发送邮件时，会有ssl安全。 否则的话会报 认证失败的错
##log4j.appender.MAIL.SMTPPort=465
#log4j.appender.MAIL.SMTPAuth=true
##邮件主题
#log4j.appender.MAIL.Subject=shop_wechat_Log4JError_Message
##发送邮件箱的用户
#log4j.appender.MAIL.SMTPUsername=18959271890m@sina.cn
##发送邮件箱
#log4j.appender.MAIL.From=18959271890m@sina.cn
##发送邮件箱的密码
#log4j.appender.MAIL.SMTPPassword=wangjiefuyanshu
##接受邮件箱(多个接收邮箱时用,号隔开		例如:=yin_jw@qq.com,yin_jw456@126.com)
#log4j.appender.MAIL.To=852801177@qq.com
##如果需要bcc给某人，则加入下列行：
##log4j.appender.MAIL.Bcc=aaa@bbb.ccc
##发送邮件的格式
##log4j.appender.MAIL.layout=org.apache.log4j.HTMLLayout
##log4j.appender.MAIL.layout=org.apache.log4j.PatternLayout
##设置位置信息记录事件。默认为 false
#log4j.appender.MAIL.layout.LocationInfo=true
##自定义模式
#log4j.appender.MAIL.layout=com.shop.api.base.log.FormatHTMLLayout
#log4j.appender.MAIL.layout.ConversionPattern=[shop-wechat] %d %-5p %c(%L) %x - %m%n






